{"version":3,"sources":["../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/cssTransition.tsx","../../src/utils/collapseToast.ts","../../src/core/eventManager.ts","../../src/hooks/useKeeper.ts","../../src/hooks/toastContainerReducer.ts","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastPositioner.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/classnames/index.js"],"names":["React","createContext","Transition","_React$Component","subClass","superClass","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","prototype","Object","create","constructor","__proto__","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","hasToastId","toastId","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","cssTransition","duration","appendPosition","collapse","collapseDuration","Array","enterDuration","exitDuration","position","preventExitTransition","done","enterClassName","exitClassName","height","style","requestAnimationFrame","collapseToast","eventManager","list","emitQueue","on","set","off","cb","get","cancelEmit","timers","clearTimeout","emit","args","timer","useKeeper","arg","refresh","ref","useRef","useEffect","reducer","action","id","useToastContainer","forceUpdate","useReducer","x","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","limit","enableMultiContainer","queueLen","freeSlot","dequeueToast","toDequeue","type","toastContent","toastProps","staleId","appendToast","delay","options","updateId","isNotValid","closeToast","removeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","closeButton","rtl","transition","className","bodyClassName","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removeFromCollection","getToastToRender","toastToRender","toastList","p","getX","e","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","top","bottom","left","right","pauseToast","playToast","getY","Math","document","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","CloseButton","ariaLabel","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","isIn","animationDuration","animationPlayState","opacity","classNames","cx","animationEvent","Toast","cssClasses","renderCloseButton","Bounce","ToastPositioner","rest","child","ToastContainer","swag","pointerEvents","newestOnTop","containers","lazy","isAnyContainerMounted","container","latestInstance","getContainer","generateToastId","Date","getToastId","dispatchToast","containerDomNode","mergeOptions","params","oldOptions","oldContent","nextOptions","containerConfig","containerInstance","item","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","hasOwn","hasOwnProperty","classes","argType","isArray","inner","join","module","exports","default"],"mappings":"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","file":"static/js/6.2343c4ad.chunk.js","sourcesContent":["export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return typeof v === 'string' ? v : null;\n}\n\nexport function objectValues<T>(obj: Record<string, T>) {\n  return Object.keys(obj).map(key => obj[key]);\n}\n\nexport function hasToastId(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum DEFAULT {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify'\n}\n","import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { DEFAULT } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Define the duration of the transition in ms\n   * You can also pass an array `[enterDuration, exitDuration]`\n   * `Default: 750`\n   */\n  duration?: number | [number, number];\n\n  /**\n   * Append current toast position to the classname.\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nexport function cssTransition({\n  enter,\n  exit,\n  duration = 750,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = DEFAULT.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  let enterDuration: number, exitDuration: number;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    [enterDuration, exitDuration] = duration;\n  } else {\n    enterDuration = exitDuration = duration as number;\n  }\n\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    ...props\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n\n    const onEnter = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${enterDuration}ms`;\n      }\n    };\n\n    const onEntered = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n\n    const onExited = () => {\n      const node = props.nodeRef.current;\n\n      if (node) {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      }\n    };\n\n    const onExit = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${exitDuration}ms`;\n        node.addEventListener('animationend', onExited);\n      }\n    };\n\n    return (\n      <Transition\n        {...props}\n        timeout={\n          preventExitTransition\n            ? collapse\n              ? collapseDuration\n              : DEFAULT.DEBOUNCE_DURATION\n            : {\n                enter: enterDuration,\n                exit: collapse\n                  ? exitDuration + collapseDuration\n                  : exitDuration + DEFAULT.DEBOUNCE_DURATION\n              }\n        }\n        onEnter={onEnter}\n        onEntered={onEntered}\n        onExit={preventExitTransition ? onExited : onExit}\n        unmountOnExit\n      >\n        {children}\n      </Transition>\n    );\n  };\n}\n","import { DEFAULT } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = DEFAULT.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(() => done(), duration as number);\n    });\n  });\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach((timer: TimeoutId) => clearTimeout(timer));\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { hasToastId } from '../utils';\n\nexport type State = Array<Id>;\nexport type Action =\n  | { type: 'ADD'; toastId: Id; staleId?: Id }\n  | { type: 'REMOVE'; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case 'REMOVE':\n      return hasToastId(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  hasToastId,\n  getAutoCloseDelay\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    const queueLen = queue.length;\n    toastCount = hasToastId(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = hasToastId(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    }\n    dispatch({ type: 'REMOVE', toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n\n    // ensure that exit transition has been completed, hence the timeout\n    setTimeout(() => {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (instance.isToastActive(toastId) && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props, isToastActive } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = !isToastActive(toastId);\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    forceUpdate();\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  deltaX: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    const toast = toastRef.current!;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent as DragEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e as DragEvent);\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translateX(${drag.deltaX}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.deltaX / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { DEFAULT } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${DEFAULT.CSS_NAMESPACE}__close-button ${DEFAULT.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { TYPE, DEFAULT } from './../utils';\nimport { TypeOptions } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: string | null;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n\n  const classNames = cx(\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${DEFAULT.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${DEFAULT.CSS_NAMESPACE}__progress-bar--animated`,\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    },\n    className\n  );\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  return <div className={classNames} style={style} {...animationEvent} />;\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { DEFAULT, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast\n  } = props;\n  const cssClasses = cx(\n    `${DEFAULT.CSS_NAMESPACE}__toast`,\n    `${DEFAULT.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__toast--rtl`]: rtl\n    },\n    className\n  );\n  const controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return null;\n\n    const props = { closeToast, type };\n    if (isFn(closeButton)) return closeButton(props);\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      in={props.in!}\n      appear\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(props.in && { role: role })}\n          className={cx(`${DEFAULT.CSS_NAMESPACE}__toast-body`, bodyClassName)}\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || controlledProgress) && (\n          <ProgressBar\n            {...(updateId && !controlledProgress\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={props.in}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={controlledProgress}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { DEFAULT, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__slide-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__slide-exit`,\n  duration: [450, 750],\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__flip-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport { ToastProps } from '../types';\n\ntype ToastPositionerProps = Pick<ToastProps, 'className' | 'style' | 'in'>;\n\nexport const ToastPositioner: React.FC<ToastPositionerProps> = ({\n  children,\n  className,\n  style,\n  ...rest\n}) => {\n  // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n  delete rest.in;\n\n  return (\n    <div className={className!} style={style}>\n      {React.Children.map(children, child =>\n        React.cloneElement(child as React.ReactElement<any>, rest)\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, DEFAULT, parseClassName, objectValues } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\nimport { ToastPositioner } from './ToastPositioner';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  return (\n    <div\n      ref={containerRef}\n      className={DEFAULT.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const swag = {\n          className: cx(\n            `${DEFAULT.CSS_NAMESPACE}__toast-container`,\n            `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\n            { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl },\n            parseClassName(className)\n          ),\n          style:\n            toastList.length === 0\n              ? { ...style, pointerEvents: 'none' }\n              : { ...style }\n        } as any;\n\n        return (\n          <ToastPositioner {...swag} key={`container-${position}`}>\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  in={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </ToastPositioner>\n        );\n      })}\n    </div>\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: PropTypes.oneOf(objectValues(POSITION)),\n\n    // @ts-ignore\n    autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n    // @ts-ignore\n    closeButton: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.bool,\n      PropTypes.func\n    ]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    toastClassName: PropTypes.string,\n    bodyClassName: PropTypes.string,\n    progressClassName: PropTypes.string,\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the container by id. Returns the last container declared when no id is given.\n */\nfunction getContainer(containerId?: Id) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = getContainer(containerId);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n\ntoast.info = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.INFO, options));\n\ntoast.error = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n\ntoast.warning = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DARK, options));\n\n/**\n * Maybe I should remove warning in favor of warn, I don't know\n */\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) =>\n  isAnyContainerMounted() && eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  isAnyContainerMounted() && eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content =\n        typeof nextOptions.render !== 'undefined'\n          ? nextOptions.render\n          : oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}